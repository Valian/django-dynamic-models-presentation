webpackJsonp([1],{11:function(e,t,n){n(17);var a=n(1)(n(13),n(206),null,null);e.exports=a.exports},12:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}var s=n(3),i=a(s),o=n(11),l=a(o),d=n(2),c=a(d);n(6),n(7),n(9),n(8);var r=n(10),_=a(r),p=n(5),h=a(p);i.default.use(c.default),i.default.use(_.default),i.default.config.productionTip=!1,new i.default({el:"#app",router:h.default,template:"<App/>",components:{App:l.default}})},13:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={name:"app"}},14:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={props:["id","size"],mounted:function(){var e=document.createElement("script"),t="https://asciinema.org/a/"+this.id+".js";e.setAttribute("src",t),e.setAttribute("id","asciicast-"+this.id),e.setAttribute("data-size",this.size||"normal"),this.$refs.container.appendChild(e)}}},15:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var s=n(2),i=a(s),o=n(203),l=a(o);t.default={mixins:[i.default.slideshow],components:{CinemaPlayer:l.default},data:function(){return{shortVersion:!0}}}},16:function(e,t){},17:function(e,t){},192:function(e,t,n){e.exports=n.p+"static/img/cassandra.f7e30ab.png"},193:function(e,t,n){e.exports=n.p+"static/img/django.4829eb6.png"},194:function(e,t,n){e.exports=n.p+"static/img/dynamic.dff7535.jpg"},195:function(e,t,n){e.exports=n.p+"static/img/editor.d11db30.png"},196:function(e,t,n){e.exports=n.p+"static/img/influx.d8ac913.png"},197:function(e,t,n){e.exports=n.p+"static/img/mongo.09ed205.png"},198:function(e,t,n){e.exports=n.p+"static/img/python.067050f.png"},199:function(e,t,n){e.exports=n.p+"static/img/single table.c771b99.png"},200:function(e,t,n){e.exports=n.p+"static/img/star_example_trans.a2f1592.png"},201:function(e,t,n){e.exports=n.p+"static/img/talkischeap.c8f0dac.jpg"},202:function(e,t,n){e.exports=n.p+"static/img/tv.e276389.png"},203:function(e,t,n){var a=n(1)(n(14),n(207),null,null);e.exports=a.exports},204:function(e,t,n){n(16);var a=n(1)(n(15),n(205),null,null);e.exports=a.exports},205:function(e,t,n){e.exports={render:function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"eg-theme-agrume"},[a("div",{staticClass:"eg-slideshow",attrs:{id:"business-logic"}},[a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut"}},[a("h1",[e._v("Dynamic Django models")]),a("h2",[e._v("Jakub Skałecki @jskalc")]),a("h4",{staticClass:"u-text-centered"},[e._v("Pycon, 12.09.2019")])]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"3"}},[a("h2",[e._v("About me")]),1===e.step?a("ul",[a("li",[e._v("Currently Technical Team Leader at VideoBeat")]),a("li",[e._v("Co-founder of eSport startup pvpc.eu")]),a("li",[e._v("Backend, DevOps, Frontend, GameDev, Machine Learning...")]),a("li",[e._v("Blogger @ https://rock-it.pl (sometimes)")]),a("li",[e._v("Polyglot programmer, technology enthusiast")])]):e._e(),2===e.step?a("div",{staticClass:"u-text-centered"},[a("img",{staticClass:"presentation-image",attrs:{src:n(198),height:"100px"}}),a("h3",[e._v("5 years")])]):e._e(),3===e.step?a("div",{staticClass:"u-text-centered"},[a("img",{staticClass:"presentation-image",attrs:{src:n(193),height:"100px"}}),a("h3",[e._v("~4 years")])]):e._e()]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"5"}},[a("h2",[e._v("Motivation")]),e.step>=2&&e.step<=3?a("eg-transition",{staticClass:"u-text-centered",attrs:{enter:"bounceInLeft"}},[a("h3",[e._v("Static Django Models are great...")])]):e._e(),3===e.step?a("eg-transition",{staticClass:"u-text-centered",attrs:{enter:"bounceInRight"}},[a("h3",[e._v("...but sometimes not flexible enough")])]):e._e(),4===e.step?a("h3",[e._v("Examples")]):e._e(),4===e.step?a("ul",[a("li",[e._v("Data sets with structure defined by client or market requirements")]),a("li",[e._v("Multi-tenant applications with slightly different clients")]),a("li",[e._v("Content Management Systems")])]):e._e(),5===e.step?a("div",{staticClass:"u-text-centered"},[a("h3",[e._v("Our use case")]),a("p",{staticClass:"u-text-centered"},[e._v("We're calculating conversion rates using TV advertisements airings data and "),a("strong",[e._v("custom conversions")]),e._v(" defined by clients")]),a("img",{attrs:{src:n(202),height:"200px"}})]):e._e(),e.step>=6?a("eg-transition",{staticClass:"u-text-centered",attrs:{enter:"bounceInLeft",leave:"fadeOut"}},[a("blockquote",[e._v("Dynamic models aren't easy. Think twice if it's the good solution for you. In this presentation, I'll try to show you how we've dealt with it.")])]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"4"}},[a("h2",[e._v("Other choices")]),1===e.step?a("div",{staticClass:"u-text-centered",staticStyle:{height:"50vh"}},[a("h3",[e._v("Table with all possible columns")]),a("img",{staticStyle:{height:"70%"},attrs:{src:n(199)}})]):e._e(),2===e.step?a("div",{staticClass:"u-text-centered",staticStyle:{height:"50vh"}},[a("h3",[e._v("Star / Snowflake schema")]),a("img",{staticStyle:{height:"100%"},attrs:{src:n(200)}})]):e._e(),3===e.step?a("div",{staticClass:"u-text-centered",staticStyle:{height:"50vh"}},[a("h3",[e._v("NoSQL database")]),a("img",{staticStyle:{height:"40%"},attrs:{src:n(192)}}),a("img",{staticStyle:{height:"40%"},attrs:{src:n(197)}})]):e._e(),4===e.step?a("div",{staticClass:"u-text-centered",staticStyle:{height:"50vh"}},[a("h3",[e._v("Time-series database")]),a("img",{attrs:{src:n(196)}})]):e._e()]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"3"}},[a("h2",[e._v("Definition")]),a("div",{staticClass:"u-text-centered"},[a("eg-transition",{staticClass:"u-text-centered",attrs:{enter:"bounceInLeft",leave:"fadeOut"}},[a("blockquote",[e._v("Dynamic Django model can be created, used, updated and removed without changing code")])]),e.step>1?a("p",[e._v("In other words")]):e._e(),e.step>2?a("eg-transition",{staticClass:"u-text-centered",attrs:{enter:"bounceInLeft",leave:"fadeOut"}},[a("blockquote",[e._v("It allows to store arbitrary data with schema known at the runtime")])]):e._e()],1)]),a("slide",{staticClass:"u-text-centered",attrs:{enter:"fadeIn",leave:"fadeOut",steps:"1"}},[a("img",{staticClass:"presentation-image presentation-image--solo",attrs:{src:n(201)}})]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"2"}},[a("h2",[e._v("Creating classes in Python")]),a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v('class RegularClass(RegularBaseClass):\n    a = 5\n\n    def normal_function(self):\n        return f"I\'m a function result! a = {self.a}"\n')]),2===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v('>>> obj = RegularClass()\n>>> obj.a\n5\n>>> obj.normal_function()\n"I\'m a function result! a = 5"\n>>> isinstance(obj, RegularBaseClass)\nTrue\n\n')]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"5"}},[a("h2",[e._v("Our hero - type function")]),2===e.step?a("p",[e._v("Basic usage")]):e._e(),2===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v(">>> type(5)\n<​class 'int'>\n\n>>> type('abc')\n<​class 'str'>\n\n>>> type(RegularClass())\n<​class 'RegularClass'>\n\n>>> type(RegularClass()) == RegularClass\nTrue\n")]):e._e(),3===e.step?a("p",[e._v("More interesting")]):e._e(),3===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v(">>> type(RegularClass)\n<​class 'type'>\n\n>>> type(type)\n<​class 'type'>\n")]):e._e(),4===e.step?[a("p",[e._v("With three arguments, returns a new class")]),a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v('# type(name, bases, dict)\n>>> def func(self):\n...     return f"I\'m a function result! a = {self.a}"\n...\n>>> DynamicClass = type(\n...    \'DynamicClass\',\n...    (RegularBaseClass,),\n...    {"a": 5, "normal_function": func}\n... )')]),a("p",[e._v("This is essentially a dynamic form of the "),a("em",[e._v("class")]),e._v(" statement.")])]:e._e(),5===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v('>>> obj = DynamicClass()\n>>> obj.a\n5\n>>> obj.normal_function()\n"I\'m a function result! a = 5"\n>>> type(obj) == DynamicClass\nTrue\n>>> isinstance(obj, RegularBaseClass)\nTrue\n')]):e._e()],2),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"2"}},[a("h2",[e._v("Django models")]),1===e.step?a("p",[e._v("Static model")]):e._e(),1===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("class Event(Model):\n    timestamp = models.DateTimeField(auto_now_add=True)\n    country = models.CharField(max_length=3)\n    source = models.CharField(max_length=10)\n")]):e._e(),2===e.step?a("p",[e._v("Same, but dynamic")]):e._e(),2===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("Event = type('Event', (Model,), {\n    'timestamp': models.DateTimeField(auto_now_add=True),\n    'country': models.CharField(max_length=3),\n    'source': models.CharField(max_length=10),\n    '__module__': 'myapp.models'  # required by Django\n})\n\n")]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"4"}},[a("h2",[e._v("Migrations")]),a("h3",[e._v("In a regular Django application")]),a("ul",[e.step>1?a("li",[e._v("Create the new model")]):e._e(),e.step>2?a("li",[e._v("Create migrations")]):e._e(),e.step>3?a("li",[e._v("Run migrations")]):e._e()])]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"3"}},[a("h2",[e._v("Migrations")]),a("h3",[e._v("With dynamic models")]),2===e.step?a("h1",{staticClass:"u-text-centered"},[e._v("??")]):e._e(),3===e.step?a("h2",{staticClass:"u-text-centered"},[e._v("We have to do it by ourselves!")]):e._e()]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"5"}},[a("h2",[e._v("Database API")]),a("div",{staticClass:"u-text-centered"},[1===e.step?a("img",{attrs:{src:n(195)}}):e._e()]),2===e.step?a("p",[e._v("SchemaEditor")]):e._e(),2===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("from django.db import connection\n\nwith connection.schema_editor() as editor:\n  editor.create_model(Event)\n\n")]):e._e(),3===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v(">>> Event.objects.create(country='PL', source='mobile')\n<​Event: Event object (1)>\n\n>>> e = Event.objects.first()\n>>> e.pk\n1\n\n>>> e.timestamp\ndatetime.datetime(2019, 9, 3, 18, 44, 54, 220157, tzinfo=<​UTC>)\n")]):e._e(),4===e.step?a("h3",{staticClass:"u-text-centered"},[e._v("But there is a problem")]):e._e(),5===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v('>>> with connection.schema_editor() as editor:\n...     editor.create_model(Event)\n...\nTraceback (most recent call last):\n.\n.\n.\nProgrammingError: relation "metrics_event" already exists\n')]):e._e(),6===e.step?a("h3",{staticClass:"u-text-centered"},[e._v("We need to manually check if operation is allowed")]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"9"}},[a("h2",[e._v("Our own migrations")]),e.step<=2?a("h3",{staticClass:"u-text-centered"},[e._v("Django introspection to the rescue!")]):e._e(),2===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v(">>> cursor = connection.cursor()\n>>> introspection.get_table_list(cursor)\n[TableInfo(name='myapp_event', type='t')]\n\n>>> introspection.get_table_description(cursor, 'myapp_event')\n[\n   FieldInfo(name='id', null_ok=False, type_code=23, ...),\n   FieldInfo(name='timestamp', null_ok=False, ...),\n   ...\n]\n")]):e._e(),3===e.step?a("p",[e._v("Get existing fields")]):e._e(),3===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("existing_fields = introspection.get_table_description(\n  cursor, table_name\n)\nexisting_fields_names = {f.name for f in existing_fields}\n")]):e._e(),4===e.step?a("p",[e._v("Compute not created fields")]):e._e(),4===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("local_fields = model._meta.local_fields\nlocal_not_existing_fields = {\n    f for f\n    in local_fields\n    if field.column not in existing_fields_names\n}\n")]):e._e(),e.step>=5&&e.step<=7?a("p",[e._v("Create missing")]):e._e(),e.step>=5&&e.step<=7?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("for field in local_not_existing_fields:\n    with connection.schema_editor() as editor:\n        editor.add_field(model, field)\n")]):e._e(),e.step>=6&&e.step<=7?a("p",[e._v("Remove deleted")]):e._e(),e.step>=6&&e.step<=7?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("with connection.schema_editor() as editor:\n    editor.remove_field(model, field)\n")]):e._e(),7===e.step?a("p",[e._v("Update changed etc")]):e._e(),7===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("with connection.schema_editor() as editor:\n    editor.alter_field(model, old_field, new_field)\n")]):e._e(),8===e.step?a("p",[e._v("With this knowledge, we can write "),a("em",[e._v("synchronize")]),e._v(" func")]):e._e(),8===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("def synchronize_dynamic_model(model):\n    with connection.cursor() as cursor:\n        tables = connection.introspection.get_table_list(cursor)\n        table_name = model._meta.db_table\n        if table_name not in {t.name for t in tables}:\n            with connection.schema_editor() as editor:\n                editor.create_model(model)\n        else:\n            # update table logic\n            ...\n")]):e._e(),9===e.step?a("p",[e._v("And use it")]):e._e(),9===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("attributes = {\n  'timestamp': models.DateTimeField(auto_now_add=True),\n  '__module__': 'myapp.models'\n}\n\nEvent = type('Event', (Model,), attributes)\nsynchronize_dynamic_model(Event)\nEvent.objects.create()\n\n# modify fields and recreate class\nfields['source'] = models.CharField(max_length=10, default='')\nEvent = type('Event', (Model,), attributes)\nsynchronize_dynamic_model(Event)\n\nassert Event.objects.first()\n\n")]):e._e()],1),a("slide",{staticClass:"u-text-centered",attrs:{enter:"fadeIn",leave:"fadeOut",steps:"1"}},[a("img",{staticClass:"presentation-image presentation-image--solo",attrs:{src:n(194)}})]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"3"}},[a("h2",[e._v("We need to store definitions somewhere...")]),2===e.step?a("h3",[e._v("The obvious solution?")]):e._e(),3===e.step?a("h3",[e._v("Let's use the database!")]):e._e()]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"3"}},[a("h2",[e._v('Central "model" model')]),e.step>=2?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("class DynamicModel(Model):\n    name = CharField(max_length=255)\n")]):e._e(),3===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("class DynamicField(Model):\n    model = models.ForeignKey(\n        to=DynamicModel,\n        related_name=\"fields\"\n    )\n\n    name = CharField(max_length=255)\n    type = CharField(max_length=20, choices=[\n        ('int', 'IntegerField'),\n        ('datetime', 'DateTimeField'),\n        ('text', 'TextField'),\n    ])\n")]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"4"}},[a("h2",[e._v("Usage example")]),1===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("# let's create model\nevent_model = DynamicModel(name='event')\n\n# and fields\nevent_time_field = DynamicField(\n    name='timestamp',\n    type='datetime',\n    model=event_model\n)\nevent_name_field = DynamicField(\n    name='name',\n    type='text',\n    model=event_model\n)\nevent_value_field = DynamicField(\n    name='value',\n    type='int',\n    model=event_model\n)\n")]):e._e(),e.step>=2&&e.step<=3?a("p",[e._v("Now we only need matching from type to field...")]):e._e(),e.step>=2&&e.step<=3?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("type_to_field = {\n    'int': IntegerField(),\n    'datetime': DateTimeField(),\n    'text': TextField(),\n}\n")]):e._e(),3===e.step?a("p",[e._v("...construct django fields required by model...")]):e._e(),3===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("fields = {\n    f.name: type_to_field[f.type]\n    for f in event_model.fields.all()\n}\n\n")]):e._e(),4===e.step?a("p",[e._v("and we're ready to go!")]):e._e(),4===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("EventModel = type(event_model.name, (Model,), {\n    **fields,\n    '__module__': 'myapp.models'\n})\n\nsynchronize_dynamic_model(EventModel)\n\n")]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"2"}},[a("h2",[e._v("Field options")]),e.step<=2?a("h3",[e._v("We need to customize our fields")]):e._e(),2===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("class DynamicField(Model):\n    ...\n    options = JSONField()\n\n\nDynamicField(\n    name='label'\n    type='char',\n    options={'max_length': 50}\n)\n\n")]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"5"}},[a("h2",[e._v("Validation?")]),1===e.step?a("h3",[e._v("Per-type validators")]):e._e(),e.step>=2&&e.step<=3?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("class CharFieldValidator(Form):\n    field_cls = CharField\n    max_length = IntegerField(default=255)\n")]):e._e(),3===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("validator = CharFieldValidator(field.options)\n\nif validator.is_valid():\n    data = validator.cleaned_data\n    return validator.field_cls(**data)\n")]):e._e(),e.step>=4?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("type_to_validator_cls = {\n    'int': IntegerFieldValidator,\n    'datetime': DateTimeFieldValidator,\n    'text': TextFieldValidator,\n    'char': CharFieldValidator,\n}\n")]):e._e(),5===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("def get_field(type, config):\n    validator_cls = type_to_validator_cls[type]\n    validator = validator_cls(field.options)\n    if validator.is_valid():\n        data = validator.cleaned_data\n        return validator.field_cls(**data)\n    else:\n        raise ValidationError(validator.errors)\n")]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"3"}},[a("h2",[e._v("My favourite shortcut")]),1===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("class DynamicField(Model):\n    ...\n\n    @property\n    def django_field(self):\n        return get_field(self.type, self.options)\n\n    # automatically called by django admin and forms\n    def clean(self):\n        assert self.django_field\n")]):e._e(),2===e.step?a("p",[e._v("Now we can get our field just by calling")]):e._e(),2===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v(">>> DynamicField(\n...   type='char',\n...   options={'max_length': 100}\n... ).django_field\n\n<​django.forms.fields.CharField object at 0x7fe>\n\n>>> DynamicField(\n...   type='int',\n...   options={'max_length': 'abc'}\n... ).django_field\n\nTraceback (most recent call last):\n.\n.\n.\nValidationError: {'max_length': ['Enter a whole number.']}\n\n")]):e._e(),3===e.step?a("p",[e._v("Similar shortcut for DynamicModel")]):e._e(),3===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("class DynamicModel(Model):\n  ...\n\n  @property\n  def django_model(self):\n      return type(self.name, (Model,), {\n          **{f.name: f.field for f in self.fields.all()},\n          '__module__': 'myapp.models'\n      })\n")]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"1"}},[a("h2",[e._v("Automatic synchronization")]),a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("from django.db.models.signals import post_save\n\n@post_save(sender=DynamicField)\ndef synchronize(field_instance, **kwargs):\n    synchronize_dynamic_model(field_instance.model.django_model)\n")])],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"1"}},[a("h2",[e._v("Final usage")]),1===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("# just create model and fields\nevent_model = DynamicModel(name='event')\nDynamicField.objects.create('timestamp', 'datetime', event_model)\nDynamicField.objects.create('name', 'text', event_model)\n\n# and it's ready to use\nEventModel = event_model.django_model\nEventModel.objects.all()\n")]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"2"}},[a("h2",[e._v("Bonus: Usage with DRF")]),1===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v('class DynamicModelViewSet(ModelViewSet):\n\n  def get_model(self):\n    return DynamicModel.objects.get(pk=self.kwargs["model_pk"])\n\n  def get_queryset(self):\n    dynamic_model = self.get_model()\n    return dynamic_model.django_model.objects.all()\n\n  def get_serializer_cls(self):\n    class Meta:\n      fields = \'__all__\'\n      model = model_cls\n\n    return type(\n      "DynamicModelSerializer",\n      (ModelSerializer,),\n      {"Meta": Meta}\n    )\n')]):e._e(),2===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v('urlpatterns = [\n  path("model/<​int:model_pk>/", DynamicModelViewSet.as_view())\n]')]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"2"}},[a("h2",[e._v("Warning")]),1===e.step?a("p",[e._v("Related name conflicts")]):e._e(),1===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("type(DynamicModel, (Model,), {\n    'field': ForeignKey(\n        to=StaticModel,\n        related_name=\"dynamic_model\"\n    )\n}\n\ntype(OtherDynamicModel, (Model,), {\n    'field': ForeignKey(\n        to=StaticModel,\n        related_name=\"dynamic_model\"\n    )\n}\n\n")]):e._e(),2===e.step?a("p",[e._v("Solution")]):e._e(),2===e.step?a("highlight-code",{staticClass:"eg-code-block code-box",attrs:{lang:"python"}},[e._v("type(DynamicModel, (Model,), {\n    'field': ForeignKey(\n        to=StaticModel,\n        related_name=\"+\"  # no reverse relation\n    )\n}\n\ntype(OtherDynamicModel, (Model,), {\n    'field': ForeignKey(\n        to=StaticModel,\n        related_name=\"+\"  # no reverse relation\n    )\n}\n\n\n")]):e._e()],1),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"1"}},[a("h2",[e._v("Pros")]),a("ul",[a("li",[e._v("Dynamic, runtime-defined shape of the database")]),a("li",[e._v("Lower infrastructure complexity (single database for dynamically-shaped and static data)")]),a("li",[e._v("Fast writes / reads (compared to Star schema)")])])]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"1"}},[a("h2",[e._v("Cons")]),a("ul",[a("li",[e._v("Higher code complexity (initial bootstrapping and future usage)")]),a("li",[e._v('Requires some Django "hacks"')]),a("li",[e._v("Hard time with Foreign Keys")])])]),a("slide",{attrs:{enter:"fadeIn",leave:"fadeOut",steps:"1"}},[a("h1",[e._v("Thank you!")]),a("h2",[e._v("Any questions?")])])],1)])},staticRenderFns:[]}},206:function(e,t){e.exports={render:function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{attrs:{id:"app"}},[n("router-view")],1)},staticRenderFns:[]}},207:function(e,t){e.exports={render:function(){var e=this,t=e.$createElement;return(e._self._c||t)("div",{ref:"container",attrs:{id:e.id}})},staticRenderFns:[]}},5:function(e,t,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0});var s=n(3),i=a(s),o=n(208),l=a(o),d=n(204),c=a(d);i.default.use(l.default);var r=[{path:"*",component:c.default}];t.default=new l.default({mode:"history",routes:r})},6:function(e,t){},7:function(e,t){},8:function(e,t){},9:function(e,t){}},[12]);